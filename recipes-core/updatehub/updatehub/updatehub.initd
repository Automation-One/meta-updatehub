#!/bin/sh
PATH=/sbin:/usr/sbin:/bin:/usr/bin

DESC="updatehub"
NAME=updatehub
DAEMON=@BINDIR@/$NAME
DAEMON_ARGS=""
PIDFILE=@LOCALSTATEDIR@/run/$NAME.pid
LOGFILE=@LOCALSTATEDIR@/log/$NAME.log
SCRIPTNAME=@SYSCONFDIR@/init.d/$NAME

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0

. @SYSCONFDIR@/init.d/functions

log_daemon_msg() {
    echo -n $*
}

log_end_msg() {
    if [ $1 -eq 0 ]; then
        success
    else
        failure
    fi
    echo
}

export DAEMON_ARGS
export LOGFILE

do_start()
{
        rm -f /tmp/.stop-updatehub
        (while [ ! -f /tmp/.stop-updatehub ]; do
        start-stop-daemon --start --quiet --pidfile $PIDFILE --make-pidfile \
                          --startas /bin/sh -- -c @LIBDIR@/updatehub/updatehub.start || sleep 1
        done ; rm -f /tmp/.stop-updatehub) &
}

do_stop()
{
        > /tmp/.stop-updatehub
        start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE --name $NAME
        RETVAL="$?"
        [ "$RETVAL" = 2 ] && return 2
        start-stop-daemon --stop --quiet --oknodo --retry=0/30/KILL/5 --exec $DAEMON
        [ "$?" = 2 ] && return 2
        rm -f $PIDFILE
        return "$RETVAL"
}

case "$1" in
  start)
        [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
        do_start
        case "$?" in
                0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
                2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
        esac
        ;;
  stop)
        [ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
        do_stop
        case "$?" in
                0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
                2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
        esac
        ;;
  status)
        status "$DAEMON" "$NAME" && exit 0 || exit $?
        ;;
  restart|force-reload)
        log_daemon_msg "Restarting $DESC" "$NAME"
        do_stop
        sleep 3
        case "$?" in
          0|1)
                do_start
                case "$?" in
                        0) log_end_msg 0 ;;
                        1) log_end_msg 1 ;; # Old process is still running
                        *) log_end_msg 1 ;; # Failed to start
                esac
                ;;
          *)
                # Failed to stop
                log_end_msg 1
                ;;
        esac
        ;;
  *)
        echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
        exit 3
        ;;
esac

:
